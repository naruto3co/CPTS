1. M·ª•c ƒë√≠ch
  Database d√πng ƒë·ªÉ l∆∞u v√† qu·∫£n l√Ω k·∫øt qu·∫£ pentest: host, service, l·ªó h·ªïng, credential, loot.
  Gi√∫p tr√°nh b·ªã r·ªëi khi ƒë√°nh gi√° nhi·ªÅu m√°y ho·∫∑c c·∫£ m·∫°ng.
  C√≥ th·ªÉ import/export d·ªØ li·ªáu t·ª´ tool kh√°c (Nmap, Nessus‚Ä¶) ƒë·ªÉ t√≠ch h·ª£p k·∫øt qu·∫£.
  Th√¥ng tin l∆∞u trong DB c√≥ th·ªÉ d√πng tr·ª±c ti·∫øp ƒë·ªÉ c·∫•u h√¨nh tham s·ªë cho exploit. 

2. C√†i ƒë·∫∑t & K·∫øt n·ªëi
  Metasploit d√πng PostgreSQL l√†m backend.
  C√°c b∆∞·ªõc c∆° b·∫£n:
  Ki·ªÉm tra v√† kh·ªüi ƒë·ªông PostgreSQL (sudo systemctl start postgresql).
  Kh·ªüi t·∫°o DB: msfdb init.
  K·∫øt n·ªëi: msfdb run ho·∫∑c trong msfconsole g√µ db_status ƒë·ªÉ ki·ªÉm tra. 

3. L·ªánh c∆° b·∫£n trong msfconsole
  db_status ‚Üí xem tr·∫°ng th√°i k·∫øt n·ªëi.
  db_import file.xml ‚Üí import k·∫øt qu·∫£ scan (∆∞u ti√™n Nmap XML).
  db_nmap ‚Üí ch·∫°y Nmap tr·ª±c ti·∫øp trong msfconsole v√† l∆∞u k·∫øt qu·∫£.
  db_export -f xml backup.xml ‚Üí backup d·ªØ li·ªáu.
  hosts, services, vulns, creds, loot, notes ‚Üí qu·∫£n l√Ω th√¥ng tin t∆∞∆°ng ·ª©ng. 

4. Workspaces
  Gi·ªëng nh∆∞ ‚Äúth∆∞ m·ª•c d·ª± √°n‚Äù, ƒë·ªÉ ph√¢n t√°ch d·ªØ li·ªáu theo m·ª•c ti√™u (IP, subnet, domain‚Ä¶).
  workspace -a Target_1 ‚Üí t·∫°o m·ªõi.
  workspace Target_1 ‚Üí chuy·ªÉn sang workspace v·ª´a t·∫°o. 

5. Qu·∫£n l√Ω d·ªØ li·ªáu
  Hosts ‚Üí danh s√°ch IP, hostname, OS.
  Services ‚Üí c·ªïng, service, tr·∫°ng th√°i.
  Creds ‚Üí username/password/hash t√¨m th·∫•y.
  Loot ‚Üí d·ªØ li·ªáu chi·∫øm ƒë∆∞·ª£c (hashdump, passwd, shadow‚Ä¶).
  T·∫•t c·∫£ ƒë·ªÅu c√≥ th·ªÉ th√™m/s·ª≠a/x√≥a th·ªß c√¥ng.





Flow l√†m vi·ªác v·ªõi Database trong Metasploit
1. Chu·∫©n b·ªã Database
Kh·ªüi t·∫°o v√† k·∫øt n·ªëi PostgreSQL v·ªõi Metasploit:
  msfdb init          # kh·ªüi t·∫°o DB
  msfdb run           # ch·∫°y msfconsole + k·∫øt n·ªëi DB
Trong msfconsole:
  db_status           # ki·ªÉm tra DB ƒë√£ k·∫øt n·ªëi ch∆∞a

2. T·ªï ch·ª©c Workspace
T·∫°o v√† qu·∫£n l√Ω c√°c workspace (d√πng nh∆∞ th∆∞ m·ª•c d·ª± √°n):
  workspace               # li·ªát k√™ workspace
  workspace -a Target_1   # t·∫°o m·ªõi workspace Target_1
  workspace Target_1      # chuy·ªÉn sang workspace Target_1
  workspace -d Target_1   # x√≥a workspace
üëâ D√πng ƒë·ªÉ ph√¢n bi·ªát khi pentest nhi·ªÅu h·ªá th·ªëng.

3. Import / Scan d·ªØ li·ªáu
Import k·∫øt qu·∫£ qu√©t t·ª´ ngo√†i v√†o DB:
  db_import scan.xml      # import file Nmap XML
Qu√©t tr·ª±c ti·∫øp trong msfconsole:
  db_nmap -sV -sS 10.10.10.10   # scan host, l∆∞u v√†o DB
Backup d·ªØ li·ªáu:
  db_export -f xml backup.xml

4. Xem th√¥ng tin ƒë√£ l∆∞u
Host:
  hosts
  hosts -u         # ch·ªâ hi·ªÉn th·ªã host ƒëang online
  hosts -R         # set k·∫øt qu·∫£ host l√†m RHOSTS
Service:
  services
  services -p 80   # l·ªçc theo port 80
  services -s http # l·ªçc theo t√™n d·ªãch v·ª• http
  services -R      # set d·ªãch v·ª• t√¨m ƒë∆∞·ª£c l√†m RHOSTS
Vulnerabilities:
  vulns
Credentials:
  creds
  creds -u admin   # l·ªçc user admin
  creds -s ssh     # l·ªçc credential cho d·ªãch v·ª• ssh
  creds add user:admin password:123456   # th√™m th·ªß c√¥ng
Loot (d·ªØ li·ªáu chi·∫øm ƒë∆∞·ª£c nh∆∞ hashdump):
  loot
  loot -S hash     # l·ªçc theo ki·ªÉu hash
Notes (ghi ch√∫ cho host):
  notes

5. S·ª≠ d·ª•ng d·ªØ li·ªáu cho Exploit
  Khi ƒë√£ c√≥ host/service/creds ‚Üí c√≥ th·ªÉ set t·ª± ƒë·ªông:
  hosts -R       # RHOSTS = danh s√°ch host trong DB
  services -R    # RHOSTS = host c√≥ service ƒë√£ ch·ªçn
  creds -R       # RHOSTS + login t·ª´ credential c√≥ s·∫µn



| **B∆∞·ªõc**                     | **M·ª•c ƒë√≠ch**                                 | **C√¢u l·ªánh ch√≠nh**                    | **V√≠ d·ª• c·ª• th·ªÉ**                                 | **Option quan tr·ªçng**                                   |
| ---------------------------- | -------------------------------------------- | ------------------------------------- | ------------------------------------------------ | ------------------------------------------------------- |
| 1. Kh·ªüi t·∫°o DB               | T·∫°o & ch·∫°y database backend (PostgreSQL)     | `msfdb init` / `msfdb run`            | `msfdb init`                                     | ‚Äì                                                       |
| 2. Ki·ªÉm tra DB               | X√°c nh·∫≠n ƒë√£ k·∫øt n·ªëi th√†nh c√¥ng               | `db_status`                           | `msf6 > db_status` ‚Üí `[*] Connected to msf`      | ‚Äì                                                       |
| 3. T·∫°o workspace             | Qu·∫£n l√Ω d·ªØ li·ªáu theo t·ª´ng m·ª•c ti√™u           | `workspace -a <name>`                 | `workspace -a Target_1`                          | `-a` th√™m, `-d` x√≥a, `-r` ƒë·ªïi t√™n                       |
| 4. Chuy·ªÉn workspace          | L√†m vi·ªác trong ƒë√∫ng ph·∫°m vi                  | `workspace <name>`                    | `workspace Target_1`                             | `workspace` (kh√¥ng tham s·ªë) ‚Üí li·ªát k√™                   |
| 5. Import k·∫øt qu·∫£ qu√©t       | N·∫°p d·ªØ li·ªáu t·ª´ c√¥ng c·ª• ngo√†i (Nmap, Nessus‚Ä¶) | `db_import <file.xml>`                | `db_import scan.xml`                             | File `.xml` ƒë∆∞·ª£c ∆∞u ti√™n                                |
| 6. Scan tr·ª±c ti·∫øp trong MSF  | Qu√©t m·ª•c ti√™u & l∆∞u k·∫øt qu·∫£ v√†o DB           | `db_nmap <options> <target>`          | `db_nmap -sV -sS 10.10.10.40`                    | `-sV` (d·ªãch v·ª•), `-sS` (SYN scan)                       |
| 7. Xem host ƒë√£ l∆∞u           | Li·ªát k√™ t·∫•t c·∫£ host                          | `hosts`                               | `hosts`                                          | `-u` (ch·ªâ host online), `-R` (set RHOSTS)               |
| 8. Xem service ƒë√£ l∆∞u        | Li·ªát k√™ d·ªãch v·ª• & port                       | `services`                            | `services`                                       | `-p 80` (l·ªçc theo port), `-s http` (l·ªçc theo t√™n), `-R` |
| 9. Xem credential            | Qu·∫£n l√Ω username/password/hash               | `creds`                               | `creds` ho·∫∑c `creds -s ssh`                      | `-u admin`, `-s ssh`, `-R`, `add` ƒë·ªÉ th√™m               |
| 10. Xem loot                 | D·ªØ li·ªáu thu ƒë∆∞·ª£c (hashdump, passwd‚Ä¶)         | `loot`                                | `loot`                                           | `-S hash` l·ªçc theo ki·ªÉu d·ªØ li·ªáu                         |
| 11. Xem l·ªó h·ªïng              | Qu·∫£n l√Ω c√°c vuln ƒë√£ ph√°t hi·ªán                | `vulns`                               | `vulns`                                          | ‚Äì                                                       |
| 12. Backup d·ªØ li·ªáu           | Xu·∫•t DB ra file ƒë·ªÉ l∆∞u tr·ªØ                   | `db_export -f xml <file>`             | `db_export -f xml backup.xml`                    | Format: `xml`, `pwdump`                                 |
| 13. D√πng d·ªØ li·ªáu cho exploit | T·ª± ƒë·ªông set target & th√¥ng tin               | `hosts -R`, `services -R`, `creds -R` | `services -p 445 -R` (set RHOSTS l√† host c√≥ SMB) | `-R` = ƒë∆∞a k·∫øt qu·∫£ v√†o RHOSTS                           |



msfdb init
msfdb run
msf6 > db_status
msf6 > workspace -a Target_1
msf6 > workspace Target_1
msf6 > db_import scan.xml
msf6 > hosts
msf6 > services
msf6 > creds
msf6 > services -p 445 -R
msf6 > use exploit/windows/smb/ms17_010_eternalblue
msf6 exploit(...) > run


